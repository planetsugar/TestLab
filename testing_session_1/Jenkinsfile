class ReleaseFileInformation {
    String version
    String build_date 
    String git_url;
}

RELEASE_INFORMATION_FILE = 'releaseInfo.txt'
BRANCH_TO_BUILD = '*/master'
CREDENTIALS_TO_USE = '3f2b2440-f394-42a8-ab89-5f6fa02e086a'
GIT_URL = 'git@github.com:planetsugar/TestLab.git'
WORKING_FOLDER = './testing_session_1'

node {
     withEnv(["PATH+NODE=${tool name: 'nodejs', type: 'jenkins.plugins.nodejs.tools.NodeJSInstallation'}/bin"]) {
        stage('Clean Workspace') {
            cleanWs()
        }
        stage('Checkout source') {
            checkout([$class: 'GitSCM', branches: [[name: BRANCH_TO_BUILD]], 
                doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], 
                userRemoteConfigs: [[credentialsId: CREDENTIALS_TO_USE, url: GIT_URL]]])
        }
        stage('Create/Read Release Info') {
            if (fileExists(RELEASE_INFORMATION_FILE)) {
                echo 'file exists'
            } else {
                echo 'file needs created'
            }
        }        
        stage('Install') {                    
            dir(WORKING_FOLDER) {
                sh 'npm install'             
            }        
                
        }
        stage('Build') {
            dir(WORKING_FOLDER) {
                sh 'npm run build'                
            }
        }        
        stage('Test') {
            dir(WORKING_FOLDER) {
                sh 'npm run test'
            }            
        }    
        stage('Docker') {
             dir(WORKING_FOLDER) {                 
                def customImage = docker.build("planetsugar/bombdisposal") // :${env.BUILD_ID}")                
            }  
        }   
        stage('Deploy to kubernetes') {
             dir(WORKING_FOLDER) { 
                withKubeConfig([credentialsId: 'kubernetes-config']) {
                                        sh 'kubectl apply -f Deployment.yml'
                }
            }
        }
    }
}